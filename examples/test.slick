amy is good.
bob is _. // "bob is anything"

Person confirmed Property if
	and Person is Property
	and diff {Property bad}.

expected   if     amy confirmed good.
unexpected if not bob confirmed good.
/*
"bob confirmed good" is obviously not inferred so query fails!
backwards reasoning would find this just fine! 
This makes it seem like we should remove "bad" because it creates expectations
I don't think we can meet :(
*/

(_ *) is transitive.

X R Z if
	and R is transitive
	and X R Y
	and     Y R Z.

< is a relation.
1 < 2.
2 < 3.

X (R *) Y if
	and R is a relation
	and X R Y
	and diff{R (_ *)}.

1 < 3 as expected if 1 < 3.

/*
but this is an example where it is very powerful, and there is no obvious
workaround.
The following does NOT work because it fails the termination test:

(_ *) is a closure.
X (R *) Y if
	and R is a relation
	and X R Y
	and not R is a closure.

The following is the best workaround:
*/

1 <= 2.
2 <= 3.

X (<= *) Y if X <= Y.

1 <= 3 as expected if 1 <= 3.


