"detecting ill-formity" {
	error if error _.
}

"asserting agent autonomy" {
	// E.g. only X can say (X uploads _)
	uploads is binary self-annotating.
	works   is binary self-annotating.

	error (A says (B X C) but A isn't B) if
		and A says (B X C)
		and X is binary self-annotating
		and diff {A B}.

	// E.g. only X can say (X labels _ _)
	labels is ternary self-annotating.

	error (A says (B X C D) but A isn't B) if
		and A says (B X C D)
		and X is ternary self-annotating
		and diff {A B}.
}

"defining controllers of predicates" {
	"defining controllers of predicates" controls binary controls.
	planner controls binary uploads.
	planner controls binary "planned to work".
	policy controls binary violates.

	error (Sayer says A X B but Sayer isn't controller Controller) if
		and Sayer says (A X B)
		and Controller controls binary X
		and diff {Sayer Controller}.
}


"defining sealing" {
	error if
		and Sayer says (X lets Y modify Z)
		and diff {Sayer X}.



	error (X uploads Y "but uploader does not evidently own it") if
		and X uploads Y
		and not X "evidently-owns" Y.

	error (X labels on behalf of Y) if
		and X says (Y labels _ _)
		and diff {X Y}.

	error (X "may not define inputs") if
		and X says (_ --input--> _)
		and diff {X driver}.

	error (X "may not define outputs") if
		and X says (_ --output--> _)
		and diff {X driver}.

}

/*
policy {
	error (X says (Y violates Z)) if
		and X says (Y violates Z)
		and diff {X policy}.

	X violates planning if
		and X works Y
		and not X "planned to work" Y.
}

agreement {
	Agent "evidently-owns" Data if
		and Agent uploads Data
		and same{Data (Agent _)}.

	Data involves Agent
		if Agent uploads Data
		and not Agent "opts out of involvement in" Data.

	Task involves Agent
		if Data --input--> Task
		and Data involves Agent.

	Data involves Agent
		if Task --output--> Data
		and Task involves Agent
		and not Agent "opts out of involvement in" Data.
}

driver {
	(amy 2) --input--> t1.
    t1 --output--> (bob 1).
	(bob 1) --input--> t2.
}

planner {
	amy "planned to work" t1.
}

amy {
	amy uploads (amy 2).
	amy "opts out of involvement in" (amy 2).
}

bob {
	bob uploads (bob 1).
}
*/