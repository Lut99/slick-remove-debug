error detect {
	error if error _.
}

sealing {
	error (X uploads Y "but uploader does not evidently own it") if
		and X uploads Y
		and not X evidently owns Y.

	error (X says Y uploads Z "but sayer and uploader differ") if
		and X says (Y uploads Z)
		and diff {X Y}.

	error (X labels on behalf of Y) if
		and X says (Y labels _ _)
		and diff {X Y}.

	error (X "may not define inputs") if
		and X says (_ --input--> _)
		and diff {X planner}.

	error (X "may not define outputs") if
		and X says (_ --output--> _)
		and diff {X planner}.
	error (X "may not define workers") if
		and X says (_ works _)
		and diff {X planner}.
}

agreement {
	Agent evidently owns Data if
		and Agent uploads Data
		and same{Data (Agent _)}.

	Data involves Agent
		if Agent uploads Data.

	Task involves Agent
		if Task --input--> Data
		and Data involves Agent
		and not Agent "opts out of involvement in" Data.

	Data involves Agent
		if Task --output--> Data
		and Task involves Agent.
}

planner {
	(amy 2) --input--> t1.
	t1 --output--> (bob 1).
	(bob 2) --input--> t2.
}

amy {
	amy uploads (amy 2).
}

bob {
	bob uploads (bob 1).
}
